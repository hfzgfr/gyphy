{"version":3,"sources":["Images/Download.svg","Images/Right.svg","Images/Left.svg","Images/Reset.svg","Images/Enter.svg","Components/Search.jsx","Components/GifTrending.jsx","Components/GifTrendingSearch.jsx","Gif.js","Components/Random.jsx","Images/Home.svg","Images/Mood.svg","App.js","index.js"],"names":["Search","search","setSearch","fetchData","setTitle","Form","inline","onSubmit","e","preventDefault","FormControl","className","type","placeholder","value","onChange","target","Button","src","Enter","alt","GifTrending","limit","offset","setOffset","setTrending","setData","setLoader","setTotalCount","content","setTrendSearch","title","a","URL","process","axios","fetchGif","fetchRes","status","data","pagination","total_count","GifTrendingSearch","trendSearch","setTsearch","Gif","useState","loader","totalCount","trending","tSearch","console","log","useEffect","handleDownload","url","xhr","XMLHttpRequest","open","responseType","onload","imageUrl","window","webkitURL","createObjectURL","this","response","tag","document","createElement","href","download","charAt","toUpperCase","slice","body","appendChild","click","removeChild","send","Container","fluid","Spinner","animation","variant","length","map","g","undefined","onClick","images","fixed_height","Download","fixed_width","id","onTop","scrollTo","top","left","behavior","handleNext","handlePrev","Reset","trend","index","Right","Left","width","Random","gif","setGif","Axios","params","result","imageSrc","App","to","Home","Mood","path","exact","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.5495231d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Download.0d0e333a.svg\";","export default __webpack_public_path__ + \"static/media/Right.8feb5973.svg\";","export default __webpack_public_path__ + \"static/media/Left.268f4ea7.svg\";","export default __webpack_public_path__ + \"static/media/Reset.47abd3e1.svg\";","export default __webpack_public_path__ + \"static/media/Enter.a0bfe70d.svg\";","import React from 'react';\nimport { Button, Form, FormControl } from 'react-bootstrap';\nimport Enter from '../Images/Enter.svg';\n\nconst Search = ({search, setSearch, fetchData, setTitle}) => {\n  // HANDLE SUBMIT\n  const handleSubmit = (e) => {\n    // PREVENT DEFAULT\n    e.preventDefault();\n    // SET TITLE\n    setTitle(search);\n    // FETCH\n    fetchData(search);\n    // RESET FORM SEARCH\n    setSearch('');\n}\n  // RETURN    \n  return (\n    <>\n      {/* <div>\n          <form className='gif-search' onSubmit={handleSubmit}>\n            <input type=\"text\" value={search} onChange={ e => setSearch(e.target.value)} /> \n            <button className='gif-btn-submit' type='submit'>\n              <img className='svg' src={Enter} alt=\"enter\" />\n            </button>\n          </form>\n      </div> */}\n\n      <div>\n      <Form inline onSubmit={handleSubmit}>\n        <FormControl Search className=\"gif-search mr-sm-2\" type=\"text\" placeholder=\"Search GIF!\"\n        // search={Search}\n        value={search}\n        setSearch={setSearch} \n        fetchData={fetchData}\n        onChange={ e => setSearch(e.target.value)}\n        setTitle={setTitle} />\n        <Button className='gif-btn-submit' type='submit'>\n            <img className='svg' src={Enter} alt=\"enter\" />\n        </Button>\n      </Form>\n      </div>\n    </>\n  )\n}\n\nexport default Search\n","import axios from 'axios';\n\nconst GifTrending = async (limit, offset, setOffset, setTrending, setData, setLoader, setTotalCount, content, setTrendSearch, title, setTitle) => {\ntry {\n    let URL = `https://api.giphy.com/v1/gifs/trending?&api_key=${process.env.REACT_APP_API_KEY}&limit=${limit}&offset=${offset}`;\n    let fetchGif = await axios(URL);\n    let fetchRes = await fetchGif;\n// SET STATE CONSOLE.LOG\nif (fetchRes.status === 200) {\n    // console.log(fetchRes)\n    // SET DATA\n    setData(fetchRes.data.data)\n        // SET TOTAL COUNT\n    setTotalCount(fetchRes.data.pagination.total_count)\n        // SET LOAD FALSE\n    setLoader(false)\n        // SET RANDOM\n    setTrending(true)\n        // SET TITLE\n    if (title !== 'Trending') {\n        setTitle('Trending')\n        if (offset > 0) {\n            setOffset(0)\n        }\n    }\n    // CALL NEW CONTENT\n    content()\n        // SET TREND TO FALSE\n    setTrendSearch(false)\n}\n} catch (error) {\nif (error) throw error;\n}\n\n}\n\nexport default GifTrending\n","import axios from 'axios';\n\nconst GifTrendingSearch = async (setTrendSearch, trendSearch, setTsearch) => {\n  try {\n    let URL = `https://api.giphy.com/v1/trending/searches?&api_key=${process.env.REACT_APP_API_KEY}`;\n    let fetchGif = await axios(URL);\n    let fetchRes = await fetchGif;\n  // Set State console log\n  if (fetchRes.status === 200) {\n      // console.log(fetchRes)\n      // Set trending true or false\n      setTrendSearch(!trendSearch)\n          // Set trending search\n      setTsearch(fetchRes.data.data);\n  }\n  } catch (error) {\n    if (error) throw error;\n  }\n}\n\nexport default GifTrendingSearch\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n// import { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\nimport { Button, Container, Spinner } from 'react-bootstrap';\nimport Download from './Images/Download.svg';\n// import Home from './Images/Home.svg';\n// import Heart from './Images/Heart.svg';\nimport Right from './Images/Right.svg';\nimport Left from './Images/Left.svg';\nimport Reset from './Images/Reset.svg';\nimport Search from './Components/Search';\nimport GifTrending from './Components/GifTrending';\nimport GifTrendingSearch from './Components/GifTrendingSearch';\n\nconst Gif = () => {\n// Set States\nconst [data, setData] = useState([]);\nconst [title, setTitle] = useState('');\nconst [loader, setLoader] = useState(true);\nconst [offset, setOffset] = useState(0);\nconst [limit] = useState(8);\nconst [totalCount, setTotalCount] = useState(0);\nconst [search, setSearch] = useState('');\nconst [trending, setTrending] = useState(false);\nconst [trendSearch, setTrendSearch] = useState(false);\nconst [tSearch, setTsearch] = useState([]);\n\n// FETCH\nconst fetchData = async (title) => {\n  let URL = `https://api.giphy.com/v1/gifs/search?q=${title}&api_key=${process.env.REACT_APP_API_KEY}&limit=${limit}&offset=${offset}`\n  // TRY & CATCH\n  try {\n    let fetchGif = await axios(URL);\n  // AWAIT PROMISE RESPONSE\n    let fetchRes = await fetchGif;\n    console.log(fetchRes);\n  // CHECK RESPONSE\n    if(fetchRes.status === 200) {\n      // SET DATA STATE\n        setData(fetchRes.data.data);\n      // SET TOTAL COUNT\n        setTotalCount(fetchRes.data.pagination.total_count);\n      // SET LOADER FALSE\n        setLoader(false);\n      // CALL NEW CONTENT\n      // content()\n      if(trending) {\n          setTrending(false)\n      //RESET OFFSET\n          setOffset(0);\n      }\n      // SET TREND SEARCH\n        setTrendSearch(false);\n    }\n  } catch (err) {\n    if (err) throw err;\n  }\n}\n\n// USEEFFECT TO FETCH DATA ON OFFSET CHANGES FETCH NEW DATA\nuseEffect(() => {\n  if(trending) {\n    GifTrending(limit, offset, setOffset, setTrending, setData, setLoader, setTotalCount, content, setTrendSearch, title, setTitle)\n  }\n  // IF TRENDING FALSE, FETCH NEW DATA\n  if(!trending) {\n    fetchData(title)\n  }\n// eslint-disable-next-line react-hooks/exhaustive-deps\n}, [offset])\n\n// HANDLE DOWNLOAD\nconst handleDownload = (url) => {\n  let xhr = new XMLHttpRequest();\n  xhr.open('GET', url, true);\n  xhr.responseType = 'blob';\n  xhr.onload = function() {\n    let urlCreator = window.URL || window.webkitURL;\n    let imageUrl = urlCreator.createObjectURL(this.response);\n    let tag = document.createElement('a');\n    tag.href = imageUrl;\n    tag.download = title.charAt(0).toUpperCase() + title.slice(1);\n    document.body.appendChild(tag);\n    tag.click();\n    document.body.removeChild(tag);\n  }\n  xhr.send()\n}\n\n// RENDER CONTENT\n\nconst content = () => {\n  switch(true) {\n    // IF LOADER IS TRUE, SHOW LOADING SPINNER\n    case loader:\n      return <div>\n    <Container className=\"col text-center\" fluid=\"md\">\n    {/* <h1>Loading...</h1> */}\n      <Spinner animation=\"border\" variant=\"primary\" />\n      <Spinner animation=\"border\" variant=\"secondary\" />\n      <Spinner animation=\"border\" variant=\"success\" />\n      <Spinner animation=\"border\" variant=\"danger\" />\n    </Container>\n      </div>\n    // IF DATA ARRAY IS LOADED, LOOP THROUGH\n    case data.length > 0:\n    return data.map(g => {\n      return (\n        <div className=\"gif-card\" key={g.id}>\n          <details className=\"deets\">\n            <summary>\n              Show\n            </summary>\n        <h5>{g.title !== undefined ? (g.title.charAt(0).toUpperCase() + g.title.slice(1)) : ''}</h5>\n        <button className=\"gif-download\" onClick={() => handleDownload(g.images.fixed_height.url)}>\n          <img className=\"svg\" src={Download} alt=\"download\" ></img>\n        </button>\n          </details>\n        <img className=\"image\" onClick={() => handleDownload(g.images.fixed_height.url)} src={g.images.fixed_width.url} alt=\"gif\" />\n        </div>\n      )\n    });\n\n  // OTHERWISE, RETURN DEFAULT DATA\n  default:\n    return data\n  }\n}\n\n// ON TOP FUNC\nconst onTop = () => {\n  let options = {top:0, left:0, behavior:\"smooth\"};\n  window.scrollTo(options);\n}\n\n// HANDLE NEXT\nconst handleNext = () => {\n  // SET LOAD\n  setLoader(true);\n  // ADD ONE PAGE\n  setOffset(offset + limit);\n  // GO TOP\n  onTop();\n}\n\n// HANDLE PREVIOUS\nconst handlePrev = () => {\n  // SET LOAD\n  setLoader(true);\n  // ADD ONE PAGE\n  setOffset(offset - limit);\n  // GO TOP\n  onTop();\n}\n\n\n// RETURN\n  return (\n    <>\n    <div>\n      <header>\n        <div className=\"gif-title\">\n        {/* <Router>\n          <Route path=\"/\" exact component={Homepage} />\n        </Router> */}\n          <h1 className=\"gif-title-h1\">GYPHY</h1>\n        </div>\n        <div><strong>Search:</strong> {title}</div>\n    <Search search={search} setSearch={setSearch} fetchData={fetchData} setTitle={setTitle} />\n    <a href=\"/\">\n      <img src={Reset} alt=\"reset\" className=\"svg\"/>\n    </a>\n      </header>\n    <Button variant=\"outline-info\" className=\"gif-btn-trending\" \n    onClick={() => GifTrending(limit, offset, setOffset, setTrending, setData, setLoader, setTotalCount, content, setTrendSearch, title, setTitle)}>\n      Trending\n    </Button>\n    <Button variant=\"outline-info\" className=\"gif-btn-trendsearch\" onClick={() => trendSearch ? setTrendSearch(false) : GifTrendingSearch(setTrendSearch, trendSearch, setTsearch, setData)} >\n      Trending Search\n    </Button>\n\n    <div className=\"gif-wrap\">\n      {\n        trendSearch ?\n        (\n          <div className=\"gif-trend-search\">\n            <ul>\n              {tSearch.map((trend, index) => <li key={index}> <strong>{index + 1}</strong> {trend.toUpperCase()}</li>)}\n            </ul>\n          </div>\n        )\n        :\n        ''\n      }\n      {content()}\n      </div>\n      <div className=\"pagination\">\n        {\n          totalCount === 0 ? '' : offset < limit ? <img className=\"svg\" src={Right} alt=\"right\" onClick={handleNext} />\n          :\n          offset >= totalCount ?\n          <img className=\"svg\" src={Left} alt=\"left\" onClick={handlePrev} />\n          :\n          <>\n          <img className=\"svg\" src={Left} alt=\"left\" onClick={handlePrev} />\n          <img className=\"svg\" src={Right} alt=\"right\" onClick={handleNext} />\n          </>\n        }\n      \n    </div>\n      <img width=\"100%\" src=\"https://media.giphy.com/headers/2019-02-28-42-1551397358/whm-banner-web.gif\" alt=\"\"/>\n    </div>\n  </>\n  )\n}\n\nexport default Gif\n","import React, { useEffect, useState } from 'react';\nimport { Button, Container } from 'react-bootstrap';\nimport Axios from 'axios';\n\n\nconst Random = () => {\n  const [gif, setGif] = useState('');\n\n  const fetchData = async () => {\n    const API_KEY = process.env.REACT_APP_API_KEY;\n    // console.log(process.env.REACT_APP_API_KEY);\n    const result = await Axios(`https://api.giphy.com/v1/gifs/random?api_key=${API_KEY}`, {\n      params: {\n        // limit: \"5\"\n      }\n    });\n    // console.log(result);\n    setGif(result.data.data);\n    const imageSrc = result.data.data.images.fixed_height.url;\n      // console.log(result.data.data.images);\n    setGif(imageSrc);\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, [])\n\n  const handleClick = () => {\n    fetchData();\n  }\n\n  return (\n    <div>\n    <h1>Random</h1>\n    <Container className=\"col text-center\" fluid>\n      <img src={gif} alt=\"Random GIF\"/>\n      <br />\n      <br />\n      <Button variant=\"warning\" onClick={handleClick}>Randomize!</Button>\n    </Container>\n    </div>\n  )\n}\n\nexport default Random","export default __webpack_public_path__ + \"static/media/Home.e4156210.svg\";","export default __webpack_public_path__ + \"static/media/Mood.9c6d55a4.svg\";","import React from 'react';\nimport './App.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Gif from './Gif';\nimport Random from './Components/Random';\nimport Home from './Images/Home.svg'\nimport Mood from './Images/Mood.svg'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n          <Link to=\"/\">\n            <img className=\"svg-icon\" src={Home} alt=\"Home\"/>\n          </Link> {' '}\n          <Link to=\"/random\">\n            <img className=\"svg-icon\" src={Mood} alt=\"Mood\"/>\n          </Link>\n        <Switch>\n          {/* <Gif /> */}\n          <Route path='/' exact component={Gif} />\n          <Route path='/random' component={Random} />\n        </Switch>\n      </Router>\n    {/* <Random /> */}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}